{"version":3,"sources":["helpers/utils.ts","components/shared/Button.tsx","components/shared/PageWrapper.tsx","helpers/useDialogHandler.ts","images/bg_home.png","icons/PL_flag.svg","icons/UK_flag.svg","fonts/Montserrat/Montserrat-Regular.ttf","components/HomePage/index.tsx","components/Header/Menu.tsx","components/Header/Logo.tsx","components/Header/LangSwitch.tsx","components/Header/index.tsx","helpers/useHandleMobileMenu.ts","components/shared/Center.tsx","components/Content.tsx","theme/GlobalStyle.tsx","theme/index.ts","App.tsx","serviceWorker.ts","index.tsx","translations/pl.ts","translations/en.ts","context/index.tsx","helpers/useDeviceDetect.ts"],"names":["PORTFOLIO_PATH","CONTACT_PATH","EMAIL_REGEX","Button","styled","button","theme","font","bold","padding","medium","large","colors","secondary","primarySecondary","PageWrapper","main","light","useDialogHandler","initialState","useState","isDialogOpen","setIsDialogOpen","open","close","toggle","module","exports","BackgroundImg","bgHome","BackgroundBlur","div","ContentWrapper","Note","h2","CtaWrapper","section","CallToAction","Link","RouteLink","HomePage","content","useContext","GlobalContext","home","note","to","cta","portfolio","contact","MenuWrapper","List","ul","primary","xxl","Menu","menuRef","ref","onClick","nav","Content","i","Logo","StyledWrapper","Flag","img","LangSwitch","changeLanguage","data-language","src","flagPL","alt","flagUK","HeaderWrapper","header","NavWrapper","BurgerWrapper","Header","isMobile","burgerRef","useRef","isNavOpen","refs","closeHandler","listener","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","useHandleMobileMenu","type","aria-label","size","Center","height","PortfolioPage","lazy","ContactPage","Suspense","fallback","exact","path","component","GlobalStyle","createGlobalStyle","Montserrat","indigo","dark","small","xl","thin","regular","media","mobile","tablet","900","desktop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","specialty","sectionName","zoomBtn","toolsIntro","show","showIntro","showDemo","showCode","name","email","errors","emailPattern","submit","success","failure","initialContext","language","isDesktop","e","translationPL","createContext","GlobalContextProvider","children","setLanguage","mobileBreakpoint","desktopBreakpoint","setIsMobile","setIsDesktop","getWindowWidth","innerWidth","documentElement","clientWidth","body","resizeListener","useDeviceDetect","translationEN","Provider","value","dataset"],"mappings":"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","file":"static/js/main.ff35efab.chunk.js","sourcesContent":["export const PORTFOLIO_PATH = '/portfolio'\r\nexport const CONTACT_PATH = '/contact'\r\nexport const EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n    font-weight: ${({ theme }) => theme.font.bold};\r\n    text-align: center;\r\n    padding: ${({ theme }) =>\r\n        `${theme.padding.medium} ${theme.padding.large}`};\r\n    background: ${({ theme }) => theme.colors.secondary};\r\n    border: 2px solid ${({ theme }) => theme.colors.secondary};\r\n    &:hover {\r\n        background: ${({ theme }) => theme.colors.primarySecondary};\r\n    }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst PageWrapper = styled.main`\r\n    background: ${({ theme }) => theme.colors.light};\r\n    min-height: 90vh;\r\n`\r\nexport default PageWrapper\r\n","import { useState } from 'react'\r\n\r\nexport default function useDialogHandler(initialState: boolean) {\r\n\tconst [isDialogOpen, setIsDialogOpen] = useState(initialState)\r\n\r\n\treturn {\r\n\t\topen: () => setIsDialogOpen(true),\r\n\t\tclose: () => setIsDialogOpen(false),\r\n\t\ttoggle: () => setIsDialogOpen(!isDialogOpen),\r\n\t\tisDialogOpen,\r\n\t}\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/bg_home.fcca24b8.png\";","module.exports = __webpack_public_path__ + \"static/media/PL_flag.dfaa3340.svg\";","module.exports = __webpack_public_path__ + \"static/media/UK_flag.988c5596.svg\";","module.exports = __webpack_public_path__ + \"static/media/Montserrat-Regular.ee653992.ttf\";","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../../context'\r\nimport { Link as RouteLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport bgHome from '../../images/bg_home.png'\r\nimport { Button } from '../shared/Button'\r\nimport { PORTFOLIO_PATH, CONTACT_PATH } from '../../helpers/utils'\r\n\r\nconst HomePage = () => {\r\n    const { content } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <BackgroundImg>\r\n            <BackgroundBlur>\r\n                <ContentWrapper>\r\n                    <h3>Dominik Rycharski</h3>\r\n                    <Note>{content.home.note}</Note>\r\n                    <h3>Front End Developer</h3>\r\n                    <CtaWrapper>\r\n                        <CallToAction>\r\n                            <Link to={PORTFOLIO_PATH}>\r\n                                {content.home.cta.portfolio}\r\n                            </Link>\r\n                        </CallToAction>\r\n                        <CallToAction>\r\n                            <Link to={CONTACT_PATH}>\r\n                                {content.home.cta.contact}\r\n                            </Link>\r\n                        </CallToAction>\r\n                    </CtaWrapper>\r\n                </ContentWrapper>\r\n            </BackgroundBlur>\r\n        </BackgroundImg>\r\n    )\r\n}\r\nexport const BackgroundImg = styled.main`\r\n    position: relative;\r\n    height: 90vh;\r\n    background-image: url(${bgHome});\r\n    background-size: cover;\r\n    background-position: center;\r\n`\r\n\r\nexport const BackgroundBlur = styled.div`\r\n    display: block;\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: linear-gradient(\r\n        to right,\r\n        rgba(255, 255, 255, 0.6) 0%,\r\n        rgba(255, 255, 255, 0.5) 60%,\r\n        rgba(255, 255, 255, 0.25) 100%\r\n    );\r\n`\r\nexport const ContentWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    @media only screen and (min-width: 900px) {\r\n        align-items: start;\r\n        margin-left: 3em;\r\n        font-size: 125%;\r\n    }\r\n`\r\nexport const Note = styled.h2`\r\n    margin: 1em 0;\r\n    text-align: center;\r\n    font-size: 1.7em;\r\n`\r\nexport const CtaWrapper = styled.section`\r\n    margin-top: 2em;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    width: 100%;\r\n    max-width: 500px;\r\n    @media only screen and (min-width: 900px) {\r\n        justify-content: left;\r\n    }\r\n`\r\nexport const CallToAction = styled(Button)`\r\n    font-size: 1em;\r\n    width: 150px;\r\n    padding: 0;\r\n    &:last-of-type {\r\n        background: transparent;\r\n        &:hover {\r\n            background: ${({ theme }) =>\r\n                theme.colors.primarySecondary};\r\n        }\r\n    }\r\n    @media only screen and (min-width: 900px) {\r\n        width: 200px;\r\n        &:last-of-type {\r\n            margin-left: 2em;\r\n        }\r\n    }\r\n`\r\nconst Link = styled(RouteLink)`\r\n    display: block;\r\n    padding: 0.7em 1em;\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\nexport default HomePage\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link as RouteLink } from 'react-router-dom'\r\nimport { GlobalContext } from '../../context'\r\nimport { PORTFOLIO_PATH, CONTACT_PATH } from '../../helpers/utils'\r\n\r\nconst Menu = ({\r\n    close,\r\n    menuRef,\r\n}: {\r\n    close?: () => void\r\n    menuRef?: React.RefObject<HTMLUListElement>\r\n}) => {\r\n    const { content } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <MenuWrapper>\r\n            <List ref={menuRef}>\r\n                <li>\r\n                    <Link to='/' onClick={close}>\r\n                        {content.nav.home}\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={PORTFOLIO_PATH} onClick={close}>\r\n                        {content.nav.portfolio}\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={CONTACT_PATH} onClick={close}>\r\n                        {content.nav.contact}\r\n                    </Link>\r\n                </li>\r\n            </List>\r\n        </MenuWrapper>\r\n    )\r\n}\r\nconst MenuWrapper = styled.div`\r\n    text-align: center;\r\n    @media only screen and (min-width: 760px) {\r\n        height: 100%;\r\n    }\r\n`\r\nconst List = styled.ul`\r\n    width: 100%;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    z-index: 5;\r\n    @media only screen and (min-width: 760px) {\r\n        background: none;\r\n        flex-direction: row;\r\n        position: relative;\r\n        height: 100%;\r\n    }\r\n`\r\nconst Link = styled(RouteLink)`\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    font-weight: 600;\r\n    padding: ${({ theme }) => theme.padding.medium} 0;\r\n    &:hover {\r\n        background: ${({ theme }) => theme.colors.secondary};\r\n    }\r\n    @media only screen and (min-width: 760px) {\r\n        width: 100%;\r\n        text-align: center;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 ${({ theme }) => theme.padding.xxl};\r\n        max-width: 150px;\r\n        &:hover {\r\n            background: ${({ theme }) => theme.colors.primary};\r\n        }\r\n    }\r\n`\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst Logo = () => (\r\n    <Link to='/'>\r\n        <Content>{'< { Doryski } >'}</Content>\r\n    </Link>\r\n)\r\n\r\nconst Content = styled.i`\r\n    font-weight: ${({ theme }) => theme.font.bold};\r\n    font-size: 1.4em;\r\n`\r\nexport default Logo\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../../context'\r\nimport styled from 'styled-components'\r\nimport flagPL from '../../icons/PL_flag.svg'\r\nimport flagUK from '../../icons/UK_flag.svg'\r\n\r\nconst LangSwitch = () => {\r\n    const { changeLanguage } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <StyledWrapper>\r\n            <Flag\r\n                onClick={changeLanguage}\r\n                data-language='pl'\r\n                src={flagPL}\r\n                alt='PL'\r\n            />{' '}\r\n            <Flag\r\n                onClick={changeLanguage}\r\n                data-language='en'\r\n                src={flagUK}\r\n                alt='EN'\r\n            />\r\n        </StyledWrapper>\r\n    )\r\n}\r\nconst StyledWrapper = styled.div`\r\n    padding: 0 ${({ theme }) => theme.padding.medium};\r\n    display: flex;\r\n`\r\nconst Flag = styled.img`\r\n    margin: 0 0.2em;\r\n    width: 1.8em;\r\n    cursor: pointer;\r\n`\r\nexport default LangSwitch\r\n","import React, { useContext, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport Menu from './Menu'\r\nimport Logo from './Logo'\r\nimport LangSwitch from './LangSwitch'\r\nimport { GlobalContext } from '../../context'\r\nimport { Menu as MenuIcon } from '@styled-icons/zondicons'\r\nimport useDialogHandler from '../../helpers/useDialogHandler'\r\nimport useHandleMobileMenu from '../../helpers/useHandleMobileMenu'\r\n\r\nconst Header = () => {\r\n    const { isMobile } = useContext(GlobalContext)\r\n\r\n    const burgerRef = useRef<HTMLButtonElement>(null!)\r\n    const menuRef = useRef<HTMLUListElement>(null!)\r\n    const {\r\n        isDialogOpen: isNavOpen,\r\n        toggle,\r\n        close,\r\n    } = useDialogHandler(false)\r\n    useHandleMobileMenu([burgerRef, menuRef], close)\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            {isMobile ? (\r\n                <>\r\n                    <NavWrapper>\r\n                        <Logo />\r\n                        <BurgerWrapper>\r\n                            <LangSwitch />\r\n                            <Button\r\n                                ref={burgerRef}\r\n                                type='button'\r\n                                aria-label='Toggle navigation'\r\n                                onClick={toggle}\r\n                            >\r\n                                <MenuIcon size='26' />\r\n                            </Button>\r\n                        </BurgerWrapper>\r\n                    </NavWrapper>\r\n                    {isNavOpen && (\r\n                        <Menu menuRef={menuRef} close={close} />\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <NavWrapper>\r\n                    <Logo />\r\n                    <MenuWrapper>\r\n                        <Menu />\r\n                        <LangSwitch />\r\n                    </MenuWrapper>\r\n                </NavWrapper>\r\n            )}\r\n        </HeaderWrapper>\r\n    )\r\n}\r\nconst HeaderWrapper = styled.header`\r\n    height: 10vh;\r\n    background: ${({ theme }) => theme.colors.secondary};\r\n    align-items: center;\r\n    position: relative;\r\n`\r\nconst NavWrapper = styled.nav`\r\n    padding: 0 ${({ theme }) => theme.padding.large};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100%;\r\n    @media only screen and (min-width: 900px) {\r\n        padding: 0 ${({ theme }) => theme.padding.large} 0 3em;\r\n    }\r\n`\r\nconst MenuWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n`\r\nconst Button = styled.button`\r\n    border: none;\r\n    background: transparent;\r\n`\r\nconst BurgerWrapper = styled.div`\r\n    display: flex;\r\n    @media only screen and (min-width: 760px) {\r\n        display: none;\r\n    }\r\n`\r\nexport default Header\r\n","import { useEffect } from 'react'\r\n\r\n// Usage:\r\n// useHandleMobileMenu(modalRef, closeModal)\r\n// useHandleMobileMenu(modalRef, () => setIsModalOpen(false))\r\nexport default function useHandleMobileMenu(\r\n    refs: React.RefObject<any>[],\r\n    closeHandler: VoidFunction\r\n): void {\r\n    const listener = (event: MouseEvent) => {\r\n        for (let ref of refs) {\r\n            if (!!ref.current && ref.current.contains(event.target))\r\n                return\r\n        }\r\n        closeHandler()\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', listener)\r\n        return () => {\r\n            document.removeEventListener('mousedown', listener)\r\n        }\r\n    })\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Center = styled.div<{ height?: string }>`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: ${({ height }) => height || '100%'};\r\n`\r\nexport default Center\r\n","import React, { lazy } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport HomePage from './HomePage'\r\nimport Header from './Header'\r\nimport { PORTFOLIO_PATH, CONTACT_PATH } from '../helpers/utils'\r\nimport Center from './shared/Center'\r\nimport PageWrapper from './shared/PageWrapper'\r\nconst PortfolioPage = lazy(() => import('./PortfolioPage'))\r\nconst ContactPage = lazy(() => import('./ContactPage'))\r\n\r\nconst Content = () => (\r\n    <>\r\n        <Header />\r\n        <React.Suspense\r\n            fallback={\r\n                <PageWrapper>\r\n                    <Center height='90vh'>\r\n                        <h1>Loading...</h1>\r\n                    </Center>\r\n                </PageWrapper>\r\n            }\r\n        >\r\n            <Switch>\r\n                <Route exact path='/' component={HomePage} />\r\n                <Route\r\n                    exact\r\n                    path={PORTFOLIO_PATH}\r\n                    component={PortfolioPage}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path={CONTACT_PATH}\r\n                    component={ContactPage}\r\n                />\r\n            </Switch>\r\n        </React.Suspense>\r\n    </>\r\n)\r\n\r\nexport default Content\r\n","import { createGlobalStyle } from 'styled-components'\r\nimport Montserrat from '../fonts/Montserrat/Montserrat-Regular.ttf'\r\nimport { ThemeType } from '.'\r\n\r\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeType }>`\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${Montserrat});\r\n    }\r\n    \r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n    }\r\n\r\n    *, *::before, *::after {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    ul {\r\n        list-style-type: none;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n        color: inherit;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n        text-align: center;\r\n    }\r\n\r\n    input, input::placeholder, textarea, button {\r\n        font-family: inherit;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle\r\n","const theme = {\r\n    colors: {\r\n        primary: '#4C4C9D',\r\n        secondary: '#F4B266',\r\n        primarySecondary: '#f3d9bc',\r\n        indigo: '#540D6E',\r\n        light: '#e6e6e4',\r\n        dark: '#080705',\r\n    },\r\n    padding: {\r\n        small: '.4em',\r\n        medium: '.7em',\r\n        large: '1em',\r\n        xl: '1.3em',\r\n        xxl: '3em',\r\n    },\r\n    font: {\r\n        thin: 300,\r\n        regular: 400,\r\n        bold: 800,\r\n    },\r\n    media: {\r\n        mobile: '@media only screen and (min-width: 600px)',\r\n        tablet: '@media only screen and (min-width: 728px)',\r\n        900: '@media only screen and (min-width: 900px)',\r\n        desktop: '@media only screen and (min-width: 1024px)',\r\n    },\r\n}\r\nexport type ThemeType = typeof theme\r\n\r\nexport default theme\r\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport GlobalContextProvider from './context'\nimport Content from './components/Content'\nimport GlobalStyle from './theme/GlobalStyle'\nimport theme from './theme'\nimport { ThemeProvider } from 'styled-components'\n\nconst App = () => (\n    <GlobalContextProvider>\n        <BrowserRouter>\n            <ThemeProvider theme={theme}>\n                <GlobalStyle />\n                <Content />\n            </ThemeProvider>\n        </BrowserRouter>\n    </GlobalContextProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export default {\r\n    nav: {\r\n        home: 'Home',\r\n        portfolio: 'Portfolio',\r\n        contact: 'Kontakt',\r\n    },\r\n    home: {\r\n        note: 'Tworzę nowoczesne aplikacje webowe',\r\n        specialty: 'Front End Developer',\r\n        cta: {\r\n            portfolio: 'Moje projekty',\r\n            contact: 'Kontakt',\r\n        },\r\n    },\r\n    portfolio: {\r\n        sectionName: 'Wybrane projekty',\r\n        zoomBtn: 'Kliknij, aby przybliżyć',\r\n        toolsIntro: 'Wykorzystane narzędzia:',\r\n        show: {\r\n            showIntro: 'Pokaż mi:',\r\n            showDemo: 'DEMO',\r\n            showCode: 'KOD',\r\n        },\r\n    },\r\n    contact: {\r\n        sectionName: 'Kontakt e-mail',\r\n        name: 'Imię',\r\n        email: 'E-mail',\r\n        message: 'Twoja wiadomość',\r\n        errors: {\r\n            name: 'Przedstaw się, proszę!',\r\n            email: 'Jak będę mógł się z Tobą skontaktować?',\r\n            emailPattern: 'Podany adres email jest niepoprawny',\r\n            message: 'Powiedz mi, jak mogę Ci pomóc.',\r\n        },\r\n        submit: 'Wyślij wiadomość',\r\n        success: 'Twoja wiadomość została wysłana pomyślnie!',\r\n        failure: 'Coś poszło nie tak! Spróbuj ponownie',\r\n    },\r\n}\r\n","export default {\r\n    nav: {\r\n        home: 'Home',\r\n        portfolio: 'Portfolio',\r\n        contact: 'Contact',\r\n    },\r\n    home: {\r\n        note: 'I create modern web applications',\r\n        specialty: 'Front End Developer',\r\n        cta: {\r\n            portfolio: 'My Work',\r\n            contact: 'Contact me',\r\n        },\r\n    },\r\n    portfolio: {\r\n        sectionName: 'Chosen projects',\r\n        zoomBtn: 'Click to zoom in',\r\n        toolsIntro: 'Tools used:',\r\n        show: {\r\n            showIntro: 'Show me:',\r\n            showDemo: 'DEMO',\r\n            showCode: 'CODE',\r\n        },\r\n    },\r\n    contact: {\r\n        sectionName: 'Contact me',\r\n        name: 'Name',\r\n        email: 'E-mail',\r\n        message: 'Your message',\r\n        errors: {\r\n            name: 'Please introduce yourself!',\r\n            email: 'How can I contact you?',\r\n            emailPattern: 'Given email address is not valid',\r\n            message: 'Tell me how can I help you.',\r\n        },\r\n        submit: 'Send message',\r\n        success: 'Your message was sent successfully!',\r\n        failure: 'Something went wrong! Try again',\r\n    },\r\n}\r\n","import React, { useState, createContext } from 'react'\r\nimport translationPL from '../translations/pl'\r\nimport translationEN from '../translations/en'\r\nimport useDeviceDetect from '../helpers/useDeviceDetect'\r\nimport { ContextType } from '../types'\r\nconst initialContext = {\r\n    language: 'pl',\r\n    isMobile: false,\r\n    isDesktop: false,\r\n    changeLanguage: (\r\n        e: React.MouseEvent<HTMLImageElement, MouseEvent>\r\n    ) => {},\r\n    content: translationPL,\r\n}\r\nexport const GlobalContext = createContext<ContextType>(\r\n    initialContext\r\n)\r\n\r\nconst GlobalContextProvider = ({\r\n    children,\r\n}: {\r\n    children: React.ReactNode\r\n}) => {\r\n    const [language, setLanguage] = useState('pl')\r\n    const { isMobile, isDesktop } = useDeviceDetect(760, 900)\r\n    const changeLanguage = (e: any) =>\r\n        setLanguage(e.target.dataset.language)\r\n\r\n    const content =\r\n        !!translationEN && language === 'en'\r\n            ? translationEN\r\n            : !!translationPL && language === 'pl'\r\n            ? translationPL\r\n            : null!\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                language,\r\n                changeLanguage,\r\n                content,\r\n                isMobile,\r\n                isDesktop,\r\n            }}\r\n        >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalContextProvider\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport default function useDeviceDetect(\r\n    mobileBreakpoint: number,\r\n    desktopBreakpoint: number\r\n) {\r\n    const [isMobile, setIsMobile] = useState(false)\r\n    const [isDesktop, setIsDesktop] = useState(true)\r\n\r\n    const getWindowWidth = () =>\r\n        window.innerWidth ||\r\n        document.documentElement.clientWidth ||\r\n        document.body.clientWidth\r\n\r\n    useEffect(() => {\r\n        const resizeListener = () => {\r\n            setIsMobile(getWindowWidth() < mobileBreakpoint)\r\n            setIsDesktop(getWindowWidth() > desktopBreakpoint)\r\n        }\r\n        window.addEventListener('resize', resizeListener)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resizeListener)\r\n        }\r\n    }, [isMobile, isDesktop, mobileBreakpoint, desktopBreakpoint])\r\n    return { isMobile, isDesktop }\r\n}\r\n"],"sourceRoot":""}